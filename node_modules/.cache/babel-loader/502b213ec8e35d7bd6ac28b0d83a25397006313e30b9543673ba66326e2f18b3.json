{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rashad\\\\Documents\\\\projects\\\\MatchMade\\\\src\\\\components\\\\ImagePairs.js\",\n  _s = $RefreshSig$();\nimport { imageMap } from \"../utils/imageMap\";\nimport { useParams } from \"react-router-dom\";\nimport NotFound from \"./NotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImagePairs(props) {\n  _s();\n  const params = useParams();\n  const {\n    handleClick\n  } = props;\n  //Use \"/\" as the default category if params.category is undefined\n  const category = params.category || \"/\";\n  const images = imageMap[category];\n\n  // Check if images exist, if not render the NotFound component\n\n  if (!images) {\n    return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  //image-pair class is the group of two images\n  //future:on mobile 8 pictures per section\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: images.map((col, colIndex) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: col.map((imagePair, pairIndex) => {\n            return /*#__PURE__*/_jsxDEV(ImagePair, {\n              images: imagePair,\n              handleClick: handleClick\n            }, `imagePair-${colIndex}-${pairIndex}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this);\n          })\n        }, `col-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(ImagePairs, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = ImagePairs;\nconst ImagePair = props => {\n  const {\n    images,\n    handleClick\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    onClick: () => handleClick(images),\n    children: images.imageSet.map((imageObject, index) => {\n      const key = imageObject.url + index;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageObject.url,\n          alt: imageObject.alt,\n          className: \"img-fluid m-1\",\n          \"data-bs-toggle\": \"modal\",\n          \"data-bs-target\": \"#imagePreview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ImagePair;\nexport default ImagePairs;\nvar _c, _c2;\n$RefreshReg$(_c, \"ImagePairs\");\n$RefreshReg$(_c2, \"ImagePair\");","map":{"version":3,"names":["imageMap","useParams","NotFound","jsxDEV","_jsxDEV","ImagePairs","props","_s","params","handleClick","category","images","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","col","colIndex","imagePair","pairIndex","ImagePair","_c","onClick","imageSet","imageObject","index","key","url","src","alt","_c2","$RefreshReg$"],"sources":["C:/Users/rashad/Documents/projects/MatchMade/src/components/ImagePairs.js"],"sourcesContent":["import { imageMap } from \"../utils/imageMap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nfunction ImagePairs(props) {\r\n  const params = useParams();\r\n  const { handleClick } = props;\r\n  //Use \"/\" as the default category if params.category is undefined\r\n  const category = params.category || \"/\";\r\n  const images = imageMap[category];\r\n\r\n  // Check if images exist, if not render the NotFound component\r\n  \r\n  if (!images) {\r\n    return <NotFound />;\r\n  }\r\n\r\n  //image-pair class is the group of two images\r\n  //future:on mobile 8 pictures per section\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        {images.map((col, colIndex) => {\r\n          return (\r\n            <div className=\"col-md-4\" key={`col-${colIndex}`}>\r\n              {col.map((imagePair, pairIndex) => {\r\n                return (\r\n                  <ImagePair images={imagePair} handleClick={handleClick}key={`imagePair-${colIndex}-${pairIndex}`}/>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst ImagePair = props => {\r\n  const { images, handleClick } = props;\r\n  return (\r\n    <div className=\"row\" onClick={() => handleClick(images)}>\r\n      {images.imageSet.map((imageObject, index) => {\r\n        const key = imageObject.url + index;\r\n        return (\r\n          <div className=\"col-6 d-flex justify-content-center\" key={key}>\r\n            <img src={imageObject.url} alt={imageObject.alt} className=\"img-fluid m-1\" data-bs-toggle=\"modal\" data-bs-target=\"#imagePreview\" />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePairs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}